Essential Go Programming

‡∏ß‡∏µ‡∏£‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå ‡∏ä‡πà‡∏≠‡∏á‡∏á‡∏π‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏°
Senior Software Developer
singpor@gmail.com
https://medium.com/@iPorsut/
@iporsut

* Hello World & String

.play -numbers -edit listing-1-hello-world.go

* Variable

.play -edit listing-2-variable.go

* Variable Short Decralation

.play -edit listing-3-variable.go

* Number

.play -edit listing-4-number.go /^func main/,/^}/

* Number Operator

.play -edit listing-5-operator.go /^func main/,/^}/

* Boolean Operator

.play -edit listing-6-operator.go /^func main/,/^}/

* FizzBuzz

.play -edit listing-7-fizzbuzz.go /^func main/,/^}/

.link https://play.golang.org/p/ok3sbKoBawn Full Source Code

* If systax

.code listing-8-if-syntax.txt /BEGIN GRAMMAR OMIT/,/END GRAMMAR OMIT/

.code listing-8-if-syntax.txt /BEGIN EXAMPLE1 OMIT/,/END EXAMPLE1 OMIT/

.code listing-8-if-syntax.txt /BEGIN EXAMPLE2 OMIT/,/END EXAMPLE2 OMIT/

* FizzBuzz v2

.play -edit listing-9-fizzbuzz-v2.go /^func main/,/^}/

* Switch case syntax

.code listing-10-switch-syntax.txt /BEGIN GRAMMAR OMIT/,/END GRAMMAR OMIT/

.code listing-10-switch-syntax.txt /BEGIN EXAMPLE1 OMIT/,/END EXAMPLE1 OMIT/

* Binary Expression Eval #1

.code listing-11-switch-example.go /^\tswitch/,/^\t}/
.play -edit listing-11-switch-example.go /^func main/,/^}/
.link https://play.golang.org/p/DVSsrWMlQVc Full Source Code

* Binary Expression Eval #2

.code listing-12-switch-example.go /^\tswitch/,/^\t}/
.play -edit listing-12-switch-example.go /^func main/,/^}/
.link https://play.golang.org/p/-uwl25bPlQk Full Source Code

* For Loop

.code listing-13-for-loop-syntax.txt

* Simple Counter Loop

.play -edit listing-14-counter-loop.go

* Only Condition Loop

.play -edit listing-15-condition-loop.go

* Infinity Loop

.play -edit listing-16-infinity-loop.go

* break, continue , label and goto #1
‡πÉ‡∏ô block ‡∏Ç‡∏≠‡∏á loop ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏î‡πâ‡∏ß‡∏¢ break ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≤‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏£‡∏±‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏î‡πâ‡∏ß‡∏¢ continue ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô loop ‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ label ‡πÄ‡∏û‡∏∑‡πà‡∏≠ break ‡∏´‡∏£‡∏∑‡∏≠ continue ‡πÑ‡∏õ‡πÉ‡∏ô loop ‡∏ä‡∏±‡πâ‡∏ô‡∏ö‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ

.code listing-101-break-label.go

* break, continue , label and goto #2

.code listing-102-continue-label.go

* break, continue , label and goto #3

Go ‡∏°‡∏µ goto statement ‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® label ‡πÑ‡∏ß‡πâ‡πÑ‡∏î‡πâ‡πÅ‡∏ï‡πà‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Å‡∏ß‡πà‡∏≤ C ‡∏Ñ‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏î‡∏Ç‡πâ‡∏≤‡∏° block scope ‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ

* Array (Fix Size List)

.code listing-17-array-image.txt

* Array Variable Fix Size

.play -edit listing-18-array-fix-size.go

* Array Variable Copy Value

.play -edit listing-19-array-copy-value.go

* Array Length

.play -edit listing-20-array-length.go

* Array Loop Counter Index

.play -edit listing-21-array-loop-counter.go

* Array Loop Range Index

.play -edit listing-22-array-loop-range-index.go

* Array Loop Range Index, Value

.play -edit listing-23-array-loop-range-index-value.go

* Array Loop Range Value

.play -edit listing-24-array-loop-range-value.go

* Slice (Dynamic Size List)

.code listing-25-slice-image.txt

* Make Slice

.code listing-26-make-slice-image.txt

* Slice Indexing Panic

.play -edit listing-27-slice-indexing.go

* Slice Copy Len, Cap, Data Pointer but Shared Underlying Array #1

.code listing-28-slice-shared-underlying-array-image.txt

* Slice Copy Len, Cap, Data Pointer but Shared Underlying Array #2

.play -edit listing-29-slice-shared-underlying-array.go

* Slicing Operator #1

.code listing-30-slicing-operator-image.txt /BEGIN SLICE IMAGE 1 OMIT/,/END SLICE IMAGE 1 OMIT/

* Slicing Operator #2

.code listing-30-slicing-operator-image.txt /BEGIN SLICE IMAGE 2 OMIT/,/END SLICE IMAGE 2 OMIT/

* Slicing Operator #3

.code listing-30-slicing-operator-image.txt /BEGIN SLICE IMAGE 3 OMIT/,/END SLICE IMAGE 3 OMIT/

* Slicing Operator #4

.code listing-30-slicing-operator-image.txt /BEGIN SLICE IMAGE 4 OMIT/,/END SLICE IMAGE 4 OMIT/

* Slicing Operator #5

.play -edit listing-31-slicing-operator.go

* Slicing Array #1

.code listing-32-slicing-array-image.txt

* Slicing Array #2

.play -edit listing-33-slicing-array.go

* Append Slice #1

.code listing-34-append-slice-image.txt /BEGIN APPEND 1 OMIT/,/END APPEND 1 OMIT/

* Append Slice #2

.code listing-34-append-slice-image.txt /BEGIN APPEND 2 OMIT/,/END APPEND 2 OMIT/

* Append Slice #3

.play -edit listing-35-append-slice.go

* Copy Slice Element

.play -edit listing-36-copy-slice-element.go

* Sorting Slice

.play -edit listing-37-sorting-slice.go

* Rune, Byte, Unicode and UTF-8 #1

Unicode ‡∏Ñ‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏©‡∏≤ ‡πÅ‡∏•‡∏∞ ‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå ‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏ö‡∏ô‡πÇ‡∏•‡∏Å‡∏ô‡∏µ‡πâ ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏¢‡∏≠‡∏∞‡∏°‡∏≤‡∏Å‡πÜ ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏û‡∏ß‡∏Å emoji ‡∏î‡πâ‡∏ß‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô

a = U+0061
‡∏Å = U+0E01

‡∏ö‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå ‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ú‡∏™‡∏°‡∏´‡∏•‡∏≤‡∏¢ Unicode code point ‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô ‡πÄ‡∏ä‡πà‡∏ô

üë®‚Äçüë©‚Äçüë¶‚Äçüë¶ = U+1F468 U+200D U+1F469 U+200D U+1F466 U+200D U+1F466

* Rune, Byte, Unicode and UTF-8 #2

Rune ‡∏Ñ‡∏∑‡∏≠ type ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö Unicode code point ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏£‡∏¥‡∏á‡πÜ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡πá‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏Ç‡∏ô‡∏≤‡∏î 32 bits (int32)

‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ single quote ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏≤ rune (unicode code point) ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-38-rune.go

* Rune, Byte, Unicode and UTF-8 #3

UTF-8 ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏≤ Unicode code point ‡∏°‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏∂‡∏á ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô ‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏ß‡πà‡∏≤ Unicode code point ‡πÉ‡∏ä‡πâ int32 ‡πÄ‡∏™‡∏°‡∏≠ ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ó‡∏µ‡πà UTF-8 ‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ö‡∏≤‡∏á‡∏ä‡πà‡∏ß‡∏á‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡πÉ‡∏ä‡πâ‡πÅ‡∏Ñ‡πà 1 byte (uint8, 8 bits) ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô 32 bit ‡πÄ‡∏ä‡πà‡∏ô

a ‡πÉ‡∏ä‡πâ 1 byte ‡∏Ñ‡∏∑‡∏≠ 0x61 (97) - 8 bits
‡∏Å ‡πÉ‡∏ä‡πâ 3 bytes ‡∏Ñ‡∏∑‡∏≠ 0xE0 0xB8 0x81 (224 184 129) - 24 bits

‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Go ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏° 1 byte ‡∏à‡∏∞‡πÉ‡∏ä‡πâ type ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤ byte ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-39-byte.go

* String is UTF-8 format

String type ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô UTF-8 format ‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á type []byte ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ convert ‡πÄ‡∏õ‡πá‡∏ô []byte ‡πÑ‡∏î‡πâ
‡πÅ‡∏•‡∏∞ ‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏≤‡∏Å []byte ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô string ‡πÑ‡∏î‡πâ ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-40-string-byte.go

* String convert to rune's slice

‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ convert ‡∏à‡∏≤‡∏Å string ‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô slice ‡∏Ç‡∏≠‡∏á rune ‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-41-string-rune.go

* String length is length of byte

‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ len ‡∏Å‡∏±‡∏ö string ‡∏à‡∏∞‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô byte ‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö UTF-8 ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ô‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ ‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô rune ‡∏´‡∏£‡∏∑‡∏≠ unicode code point ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ package unicode/utf8 ‡∏ä‡πà‡∏ß‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-42-string-count.go


* String Loop Counter Index

.play -edit listing-43-string-loop-counter.go

* String Range Loop

.play -edit listing-44-string-range-loop.go

* Map

‡πÄ‡∏õ‡πá‡∏ô data type ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á key ‡∏Å‡∏±‡∏ö value ‡πÄ‡∏ä‡πà‡∏ô

"name" : "Weerasak"
"job"  : "Senior Software Developer"

* Make map
‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ map ‡πÄ‡∏â‡∏¢‡πÜ‡∏Ñ‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô nil ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö slice ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤ map ‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ make ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ map ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏•‡∏á‡πÑ‡∏õ ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-45-map.go /^func main/,/^}/

* Word Count

‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏Å‡∏ï‡πå‡πÉ‡∏ä‡πâ map ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ô‡∏±‡∏ö‡∏Ñ‡∏≥

.play -edit listing-46-map-word-count.go /^func wordCount/,/^}/

.link https://play.golang.org/p/a_ps6icySr6 Full Source Code

* Check is key exists?

.play listing-47-key-exists.go

* JSON with Map and Slice

.play -edit listing-48-json-map-slice.go /^func main/,/^}/
.link https://play.golang.org/p/TmemsUGXRz7 Full Source Code

* Struct and New Name Type #1

.code listing-49-struct-image.txt /BEGIN STRUCT 1 OMIT/,/END STRUCT 1 OMIT/

* Struct and New Name Type #2

.code listing-49-struct-image.txt /BEGIN STRUCT 2 OMIT/,/END STRUCT 2 OMIT/

* Struct and New Name Type #3

.play -edit listing-50-struct.go /^func main/,/^}/
.link https://play.golang.org/p/wPp_43Mk8sp Full Source Code

* Sorting Slice of Customer Struct #1

.play -edit listing-51-sort-slice-struct.go /BEGIN DATA OMIT/,/END DATA OMIT/

* Sorting Slice of Customer Struct #2

.play -edit listing-51-sort-slice-struct.go /BEGIN SORT OMIT/,/END SORT OMIT/
.link https://play.golang.org/p/w5ahxlaIb_p Full Source Code

* Function Declaration

.code -edit listing-52-function-declaration.txt

* Multiple Return Type

.play -edit listing-53-multiple-return-type.go /^func parseToken/,/^}/

* Named Return Type

.play -edit listing-54-named-return-type.go /^func parseToken/,/^}/

* Local Scope and Stack Frame #1

.code listing-55-local-scope-stack-frame.txt /BEGIN STACK 1 OMIT/,/END STACK 1 OMIT/

* Local Scope and Stack Frame #2

.code listing-55-local-scope-stack-frame.txt /BEGIN STACK 2 OMIT/,/END STACK 2 OMIT/

* Local Scope and Stack Frame #3

.play -edit listing-56-local-scope-stack-frame.go

* Pointer

Pointer ‡∏Ñ‡∏∑‡∏≠ ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥

.code listing-57-pointer-image.txt

* Indirection Operator

‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ Pointer ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà address ‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏≤‡∏á indirection operator ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-58-pointer-indirection-operator.go /^func main/,/^}/

* Pass pointer to function #1

‡πÄ‡∏£‡∏≤‡∏£‡∏π‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡πà‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞ function ‡∏°‡∏µ stack frame ‡πÄ‡∏Å‡πá‡∏ö local variable ‡πÅ‡∏•‡∏∞ ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ argument ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£ copy value ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ argument ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ callee function ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏ô
scope ‡∏Ç‡∏≠‡∏á caller ‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ pointer ‡∏ä‡πà‡∏ß‡∏¢

* Pass pointer to function #2

.code listing-59-pass-pointer-to-function-image.txt

* Pass slice to function

slice ‡∏ô‡∏±‡πâ‡∏ô copy value ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡πÅ‡∏ï‡πà‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ß‡πà‡∏≤‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏°‡∏µ pointer ‡∏ó‡∏µ‡πà‡∏ä‡∏µ‡πâ‡πÑ‡∏õ‡∏ó‡∏µ‡πà underlying array ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡πà‡∏≤‡∏†‡∏≤‡∏¢‡πÉ‡∏ô array ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡∏à‡∏∞‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏°‡∏µ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Å‡∏±‡∏ö slice ‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ array ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-81-pass-slice-to-function.go

* Pass map to function

map ‡∏ô‡∏±‡πâ‡∏ô copy value ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô ‡πÅ‡∏ï‡πà‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á map ‡∏Å‡πá‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö pointer ‡∏Ñ‡∏∑‡∏≠ copy address ‡πÑ‡∏õ‡∏´‡∏≤‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà heap ‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏∂‡∏á‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô map ‡∏°‡∏µ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Å‡∏±‡∏ö map ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-82-pass-map-to-function.go

* Stack and Heap #1

‡∏ô‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Stack ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô memory ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô local scope ‡∏Ç‡∏≠‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏¢‡∏±‡∏á‡∏°‡∏µ memory ‡∏≠‡∏µ‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ß‡πà‡∏≤ Heap ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏≠‡∏Å‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏à‡∏≤‡∏Å scope ‡∏Ç‡∏≠‡∏á function

‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏¢‡πÉ‡∏ô Heap ‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡∏î‡πâ‡∏ß‡∏¢ Go ‡πÅ‡∏ï‡πà Compiler ‡∏à‡∏∞‡∏°‡∏µ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏£‡∏≤‡πÄ‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô Heap ‡πÅ‡∏ó‡∏ô Stack ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà

* Stack and Heap #2

.play -edit listing-60-function-return-pointer-move-to-heap.go /BEGIN NEW CUSTOMER OMIT/,/END NEW CUSTOMER OMIT/

* Stack and Heap #3

.code listing-61-function-return-pointer-move-to-heap-image.txt
‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏ô Heap ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ pointer ‡πÉ‡∏ô Stack ‡∏ä‡∏µ‡πâ‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡∏ñ‡∏π‡∏Å Garbage Collector ‡∏ï‡∏≤‡∏°‡∏°‡∏≤‡∏Å‡∏ß‡∏≤‡∏î‡∏Ñ‡∏∑‡∏ô‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏≠‡∏á ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏∑‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡πÄ‡∏≠‡∏á

* new function

.play -edit listing-62-new-pointer-function.go

* Function Variable / Function is value #1

‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏≠‡∏≤‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤ function ‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô argument ‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-63-function-variable.go

* Function Variable / Function is value #2

.play -edit listing-64-function-pass-to-function.go

* Function Variable / Function is value #3

.play -edit listing-65-return-function.go /BEGIN SELECT OP OMIT/,/END SELECT OP OMIT/
.link https://play.golang.org/p/yoNVir-LWjC Full Source Code

* Function Variable / Function is value #4

.play -edit listing-66-map-string-function.go /BEGIN MAP FUNC OMIT/,/END MAP FUNC OMIT/
.link https://play.golang.org/p/maLIrCaQWlF Full Source Code

* Anonymous Function #1

‡∏Ñ‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á function ‡∏ï‡∏£‡∏á‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á define ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô package ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-67-anon-function.go

* Anonymous Function #2

.play -edit listing-68-anon-function.go

* Closure Scope #1

Anonymous function ‡∏à‡∏∞‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÑ‡∏ß‡πâ‡πÉ‡∏ô scope ‡∏Ç‡∏≠‡∏á function ‡∏ó‡∏µ‡πà‡∏°‡∏±‡∏ô‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-69-closure-scope.go

* Closure Scope #2

.play -edit listing-70-closure-scope.go

* Defer #1

‡∏õ‡∏Å‡∏ï‡∏¥‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ó‡∏≥ function ‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡πÑ‡∏õ‡∏ó‡∏≥‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‡πÅ‡∏ï‡πà defer ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏•‡πÑ‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
‡πÅ‡∏ï‡πà‡∏à‡∏∞‡∏ó‡∏≥‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å caller function ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-71-defer.go

* Defer #2

‡πÄ‡∏£‡∏≤‡∏°‡∏±‡∏Å‡πÄ‡∏´‡πá‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ defer ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô resource ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ IO ‡πÄ‡∏ä‡πà‡∏ô close file/network/db ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠ connect
.play -edit listing-72-defer.go /^func main/,/^}/

* Panic

‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î panic ‡∏Ç‡∏∂‡πâ‡∏ô ‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡πâ‡∏ß call stack ‡∏à‡∏∞ pop panic ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡πÜ‡∏à‡∏ô‡∏à‡∏ö‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°

* Recover

recover ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏•‡πÑ‡∏Å‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏î‡∏±‡∏Å‡∏à‡∏±‡∏ö panic ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏≥‡πÉ‡∏´‡πâ panic ‡πÑ‡∏°‡πà pop ‡πÑ‡∏õ‡∏ó‡∏µ‡πà call stack ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‡∏ã‡∏∂‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î recover ‡∏ï‡πâ‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ defer ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô

.play -edit listing-73-recover-panic.go

* New Named Type #1

‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á type ‡πÉ‡∏´‡∏°‡πà‡πÇ‡∏î‡∏¢‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö struct (type Customer struct) ‡∏Å‡∏±‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á alias name ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö type ‡∏Å‡∏±‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß (type satang=int) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Go ‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á type ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà ‡∏à‡∏≤‡∏Å type ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≥‡∏Å‡∏±‡∏ô‡πÅ‡∏Ñ‡πà struct ‡πÄ‡∏ä‡πà‡∏ô
.play -edit listing-74-named-type.go

* New Named Type #2

.play -edit listing-75-named-type.go /^func main/,/^}/

* Constant #1

Go ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£‡∏® constant ‡πÑ‡∏î‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö boolean, rune, integer, floating-point, complex ‡πÅ‡∏•‡∏∞ string ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ keyword const ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-76-const-type.go

* Constant #2

.play -edit listing-77-const-type.go

* Method #1

‡πÉ‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÅ‡∏ö‡∏ö Object Oriented ‡πÄ‡∏ä‡πà‡∏ô‡∏†‡∏≤‡∏©‡∏≤ Java ‡∏ô‡∏±‡πâ‡∏ô Method ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á Object ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≠‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Class ‡∏Ç‡∏≠‡∏á Object

‡πÅ‡∏ï‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Go ‡πÑ‡∏°‡πà‡∏°‡∏µ concept ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏≤‡∏™ ‡∏°‡∏µ‡πÅ‡∏ï‡πà concept ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á type ‡πÉ‡∏´‡∏°‡πà‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á Method ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö type ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏î‡πâ

* Method #2

.play -edit listing-78-method.go

* Method #3

.play -edit listing-79-method.go

* Pointer Receiver #1

‡∏ï‡∏£‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ Receiver ‡πÄ‡∏£‡∏≤‡∏Å‡∏≥‡∏´‡∏ô‡∏î type ‡πÄ‡∏õ‡πá‡∏ô type ‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏ã‡∏∂‡πà‡∏á‡∏Å‡∏•‡πÑ‡∏Å‡∏Å‡∏≤‡∏£‡∏ú‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á object ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å method ‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ receiver ‡∏ô‡∏±‡πâ‡∏ô‡∏Å‡πá‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö‡∏ú‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ argument ‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß function ‡∏Ñ‡∏∑‡∏≠‡∏à‡∏∞ copy ‡∏à‡∏≤‡∏Å stack frame ‡∏Ç‡∏≠‡∏á caller ‡πÑ‡∏õ‡∏ó‡∏µ‡πà stack frame ‡∏Ç‡∏≠‡∏á callee

‡∏ú‡∏•‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏£‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡πà‡∏≤‡∏≠‡∏∞‡πÑ‡∏£‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ receiver ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å method ‡∏ô‡∏µ‡πâ‡∏°‡∏≤ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£ copy ‡∏Ñ‡πà‡∏≤‡∏°‡∏≤ ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏Å‡∏±‡∏ô

‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ type ‡∏Ç‡∏≠‡∏á receiver ‡πÄ‡∏õ‡πá‡∏ô pointer

* Pointer Receiver #2

.play -edit listing-80-pointer-receiver.go

* Method Caller Type

‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô value ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ pointer ‡∏Å‡πá‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å method ‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô

.play -edit listing-83-caller-method.go

* Interface

Interface ‡πÄ‡∏õ‡πá‡∏ô type ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î set ‡∏Ç‡∏≠‡∏á method ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ó‡∏µ‡πà type ‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÜ‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏™‡πà‡∏ß‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Ç‡∏≠‡∏á interface ‡πÑ‡∏î‡πâ ‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á type ‡πÉ‡∏î‡πÜ‡∏ó‡∏µ‡πà implement interface

* Implement Interface

.play -edit listing-84-implement-interface.go

* Method Set #1

‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö value ‡∏Ç‡∏≠‡∏á type ‡∏à‡∏∞‡∏ô‡∏±‡∏ö‡πÅ‡∏Ñ‡πà value receiver ‡πÄ‡∏õ‡πá‡∏ô method set ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÅ‡∏ï‡πà pointer type ‡∏à‡∏∞‡∏ô‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á value ‡πÅ‡∏•‡∏∞ pointer receiver

.play -edit listing-85-method-set.go

* Method Set #2

.play -edit listing-86-method-set-2.go

* Empty interface #1

Empty interface ‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠ type interface ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ method ‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡πÄ‡∏•‡∏¢ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Ç‡∏≠‡∏á empty interface ‡∏Å‡πá‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏ó‡∏∏‡∏Å type implement empty interface

* Empty interface #2

.play -edit listing-87-empty-interface.go

* Type Assertion

Type assertion ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ interface ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏à‡∏£‡∏¥‡∏á‡πÜ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡πá‡∏ô type ‡πÑ‡∏´‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ implement interface ‡∏≠‡∏∑‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-88-type-assertion.go

* Type Switch

Type switch ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ö switch case ‡πÅ‡∏ï‡πà‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≤‡∏° value ‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≤‡∏° type ‡πÅ‡∏ó‡∏ô ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-89-type-switch.go

* Error interface #1

‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏Å‡∏±‡∏ô‡∏°‡∏≤‡∏ö‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡πà‡∏≤ function ‡πÑ‡∏´‡∏ô‡∏Ç‡∏≠‡∏á Go ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏à‡∏∞‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏ó‡∏≤‡∏á return value ‡∏ó‡∏µ‡πà‡∏°‡∏µ type ‡πÄ‡∏õ‡πá‡∏ô error ‡∏ã‡∏∂‡πà‡∏á type ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô interface type ‡πÄ‡∏ä‡πà‡∏ô

.code listing-91-error-interface.go

.play -edit listing-90-error-value.go

* Error interface #2

‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á error value ‡πÉ‡∏´‡∏°‡πà‡∏á‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ errors.New ‡∏´‡∏£‡∏∑‡∏≠ fmt.Errorf ‡∏ä‡πà‡∏ß‡∏¢ ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ implement interface Error ‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ

.play -edit listing-92-error-value.go

* Error interface #3

.play -edit listing-93-error-value.go

* Package #1

‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Å‡∏±‡∏ô‡∏°‡∏≤‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÇ‡∏î‡∏¢‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà func main ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡πÉ‡∏ô package ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠ main ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏©‡∏≤‡πÄ‡∏•‡∏¢‡∏ß‡πà‡∏≤‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏à‡∏∞‡∏ñ‡∏π‡∏Å build ‡πÅ‡∏•‡∏∞ run ‡πÑ‡∏î‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ package main ‡πÅ‡∏•‡∏∞ func main ‡∏≠‡∏¢‡∏π‡πà

‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á package ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∑‡πà‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏á‡πà‡∏≤‡∏¢‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏¢‡∏≠‡∏∞‡∏Ç‡∏∂‡πâ‡∏ô ‡πÅ‡∏•‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ reuse ‡∏Å‡∏±‡∏ö‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ

* Package #2

.code listing-94-package-structure-example.txt

  git clone https://github.com/iporsut/gotraining-todoapp todoapp

* Testing #1
Go ‡∏°‡∏µ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô test ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö code ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞ package ‡πÇ‡∏î‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á file ‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢ _test.go ‡πÄ‡∏ä‡πà‡∏ô

- todo_test.go

‡πÅ‡∏•‡πâ‡∏ß‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏ package ‡πÄ‡∏õ‡πá‡∏ô package ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏Å‡∏±‡∏ö package ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏´‡∏£‡∏∑‡∏≠ ‡∏°‡∏µ _test ‡πÄ‡∏õ‡πá‡∏ô suffix ‡πÄ‡∏ä‡πà‡∏ô

- package todo ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ code ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà export ‡πÑ‡∏î‡πâ
- package todo_test ‡πÑ‡∏ß‡πâ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô package ‡∏ï‡πâ‡∏≠‡∏á import todo ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô

* Testing #2
‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ function ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Test ‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö parameter `t *testing.T` ‡πÄ‡∏ä‡πà‡∏ô

  package todo_test

  import (
  	"os"
  	"testing"
  	"todoapp/todo"
  )

  func TestNew(t *testing.T) {
  	err := todo.New("2019-02-26.td")
  	if err != nil {
  		t.Error("cannot create new todo list file:", err)
  	}
  	os.Remove("2019-02-26.td")
  }

* Testing #3
‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏±‡∏ô‡πÄ‡∏ó‡∏™ ‡πÉ‡∏´‡πâ‡∏™‡∏±‡πà‡∏á

  > go test
  PASS
  ok  	todoapp/todo	0.007s

  > go test
  --- FAIL: TestNew (0.00s)
      todo_test.go:10: cannot create new todo list file:
  FAIL
  exit status 1
  FAIL	todoapp/todo	0.007s

* Goroutine #1
‡πÄ‡∏ß‡∏•‡∏≤ go program ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏£‡∏±‡∏ô go runtime ‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á flow ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ß‡πà‡∏≤ goroutine ‡πÄ‡∏ä‡πà‡∏ô func main ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏Å‡πá‡∏à‡∏∞‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ 1 goroutine

* Goroutine #2
‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ statement ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô goroutine ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏Å‡πá‡∏à‡∏∞‡∏ó‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏≥‡∏î‡∏±‡∏ö ‡πÄ‡∏™‡∏£‡πá‡∏à 1 statement ‡∏Ñ‡πà‡∏≠‡∏¢‡πÑ‡∏õ‡∏ó‡∏≥ statement ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ

.code listing-95-goroutine-flow.txt

* Goroutine #3
Go ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡πÜ goroutine ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö concurrent ‡πÑ‡∏î‡πâ ‡∏ã‡∏∂‡πà‡∏á Go ‡πÉ‡∏ä‡πà keyword ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤ go ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á goroutine ‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-96-goroutine.go

* Goroutine #4

.code listing-97-goroutine-flow.txt

‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏¢‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏•‡∏∞ goroutine ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á function count() ‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Å‡∏±‡∏ö main ‡∏≠‡∏µ‡∏Å‡∏ï‡πà‡∏≠‡πÑ‡∏õ main ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠ count ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡πÉ‡∏´‡πâ main ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô

* Channel #1

Channel ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏© ‡∏ó‡∏µ‡πà‡∏°‡∏µ operator ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏≤‡∏á channel ‡πÑ‡∏î‡πâ ‡πÄ‡∏ä‡πà‡∏ô‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ channel ‡∏ä‡∏∑‡πà‡∏≠ ch

  ch <- v // ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤ v ‡πÑ‡∏õ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô channel ch
  v := <- ch // ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á(‡∏£‡∏±‡∏ö)‡∏Ñ‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏à‡∏≤‡∏Å ch ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ v

‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö channel ‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á make ‡πÄ‡∏ä‡πà‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö slice ‡πÅ‡∏•‡∏∞ map ‡πÄ‡∏ä‡πà‡∏ô

  var ch chan int // zero value is nil
  ch = make(chan int)

‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏Ñ‡πà

  ch := make(chan int)

* Channel #2

channel ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á ‡πÄ‡∏ä‡πà‡∏ô ch = make(chan int) ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö unbuffered channel ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏≤ ‡∏™‡πà‡∏á ‡∏à‡∏∞‡∏£‡∏≠‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ô‡∏£‡∏±‡∏ö ‡πÅ‡∏•‡∏∞ ‡∏ù‡∏±‡πà‡∏á‡∏£‡∏±‡∏ö ‡∏Å‡πá‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ô‡∏™‡πà‡∏á ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-98-channel.go /BEGIN OMIT/,/END OMIT/

* Buffered Channel

‡∏™‡πà‡∏ß‡∏ô buffered channel ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô buffer ‡πÄ‡∏õ‡πá‡∏ô parameter ‡∏ó‡∏µ‡πà 2 ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô make ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-99-buffered-channel.go

‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏ß‡∏•‡∏≤ ‡∏™‡πà‡∏á ‡∏ñ‡πâ‡∏≤ buffer ‡πÑ‡∏°‡πà‡πÄ‡∏ï‡πá‡∏° ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠ ‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏±‡∏ö ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô buffer ‡∏Å‡πá‡∏à‡∏∞‡πÄ‡∏≠‡∏≤‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡∏Ñ‡∏ô‡∏™‡πà‡∏á ‡∏Å‡∏•‡πÑ‡∏Å‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏Å‡∏±‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏¥‡∏ß

* Range and Close #1

‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ channel ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡πÑ‡∏Å‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á goroutine ‡∏ù‡∏±‡πà‡∏á‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ close channel ‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß ‡∏™‡πà‡∏ß‡∏ô‡∏ù‡∏±‡πà‡∏á‡∏£‡∏±‡∏ö ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡πá‡∏Ñ‡πÑ‡∏î‡πâ‡∏ß‡πà‡∏≤ channel ‡∏ñ‡∏π‡∏Å close ‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏µ‡∏Å‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-100-close-channel.go /BEGIN OMIT/,/END OMIT/

* Range and Close #2

‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ ‡∏Å‡∏≤‡∏£‡∏ß‡∏ô‡∏ã‡πâ‡∏≥‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å channel ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏´‡∏°‡∏î channel ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏ö‡∏ß‡πà‡∏≤ channel ‡∏ñ‡∏π‡∏Å close ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß check if ‡πÄ‡∏≠‡∏á
‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ for range ‡∏Å‡∏±‡∏ö channel ‡πÅ‡∏ó‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-103-for-range-channel.go /BEGIN OMIT/,/END OMIT/

* Select #1

‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢ channel ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô ‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡πà‡∏ñ‡πâ‡∏≤ channel ‡πÑ‡∏´‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡πá‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡∏Å‡∏±‡∏ô ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ select statement ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏ä‡πà‡∏ß‡∏¢

.play -edit listing-104-select-channel.go /^func sender/,/^}/

* Select #2

.play -edit listing-104-select-channel.go /^func main/,/^}/

* Default Selection

select statement ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏°‡∏µ default ‡πÑ‡∏î‡πâ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡πà‡∏•‡∏∞ case ‡πÑ‡∏°‡πà‡∏°‡∏µ case ‡πÑ‡∏´‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏•‡∏¢ default ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ó‡∏ô ‡πÄ‡∏ä‡πà‡∏ô

.play -edit listing-105-default-select.go /^func main/,/^}/

* sync.Mutex #1

‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡πÑ‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ protect ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡πÜ goroutine ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ channel ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡πÑ‡∏Å‡∏ä‡πà‡∏ß‡∏¢ lock ‡πÉ‡∏´‡πâ‡πÅ‡∏ï‡πà‡∏•‡∏∞ goroutine ‡πÑ‡∏°‡πà‡πÅ‡∏¢‡πà‡∏á‡∏Å‡∏±‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏ô‡πÄ‡∏Å‡∏¥‡∏î race condition ‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏ß‡πà‡∏≤‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏∞‡∏≠‡πà‡∏≤‡∏ô‡∏¢‡∏≤‡∏Å‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏Ç‡∏≠‡∏á channel ‡∏Ñ‡∏∑‡∏≠‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á goroutine

Go ‡∏°‡∏µ standard package ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤ sync ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Å‡∏•‡πÑ‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ protect data ‡∏°‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡πà‡∏ô type sync.Mutex ‡∏à‡∏∞‡∏°‡∏µ method Lock ‡πÅ‡∏•‡∏∞ Unlock ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà goroutine ‡πÅ‡∏¢‡πà‡∏á‡∏Å‡∏±‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ

* sync.Mutex #2
‡πÄ‡∏ä‡πà‡∏ô‡πÄ‡∏£‡∏≤‡∏°‡∏µ map ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏ö‡∏Ñ‡∏≥ ‡πÅ‡∏ï‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ô‡∏±‡∏ö‡∏Ñ‡∏≥‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ goroutine ‡πÅ‡∏¢‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡πâ‡∏ß‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á map ‡πÅ‡∏ï‡πà map ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ sync.Mutex ‡∏ä‡πà‡∏ß‡∏¢‡πÑ‡∏°‡πà‡πÄ‡∏ä‡πà‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ map ‡πÄ‡∏Å‡∏¥‡∏î race condition ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏•‡∏≤‡∏¢‡πÜ goroutine ‡πÑ‡∏î‡πâ

* sync.Mutex #3

.play -edit listing-106-map-mutex.go /BEGIN OMIT/,/END OMIT/

* sync.Mutex #4

.play -edit listing-106-map-mutex.go /COUNT OMIT/,/END COUNT OMIT/

* sync.Mutex #5

.play -edit listing-106-map-mutex.go /^func main/,/^}/

* sync.WaitGroup #1

‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ chan struct{} ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏ö‡∏ß‡πà‡∏≤ goroutine ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÅ‡∏¢‡∏Å‡πÑ‡∏õ‡∏ô‡∏±‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏≠‡∏¢‡πÄ‡∏≠‡∏≤‡∏Ñ‡πà‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å channel ‡πÄ‡∏≠‡∏á ‡πÅ‡∏ï‡πà sync package ‡∏°‡∏µ sync.WaitGroup ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß

* sync.WaitGroup #2

.play -edit listing-107-waitgroup.go /COUNT OMIT/,/END COUNT OMIT/

* sync.WaitGroup #3

.play -edit listing-107-waitgroup.go /^func main/,/^}/